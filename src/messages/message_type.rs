use core::marker::ConstParamTy;
use crate::serde::ByteStream;
use crate::serde::deserialize::BinaryDeserialize;

#[repr(u16)]
#[derive(ConstParamTy, Debug, Eq, PartialEq)]
pub enum MessageType {
    // Client
    ChangeAction = 0,
    PublicChatMessage = 1,
    Logout = 2,
    UpdateStatsRequest = 3,
    Ping = 4,
    StartSpectating = 16,
    StopSpectating = 17,
    SpectateFrames = 18,
    CantSpectate = 21,
    PrivateChatMessage = 25,
    LeaveLobby = 29,
    JoinLobby = 30,
    CreateMatch = 31,
    JoinMatch = 32,
    LeaveMatch = 33,
    MatchChangeSlot = 38,
    MatchReady = 39,
    MatchLock = 40,
    MatchChangeSettings = 41,
    StartMatch = 44,
    UpdateMatchScore = 47,
    MatchPlayerComplete = 49,
    MatchChangeMods = 51,
    MatchLoadComplete = 52,
    MatchNoBeatmap = 54,
    MatchNotReady = 55,
    MatchFailed = 56,
    MatchHasBeatmap = 59,
    MatchSkipRequest = 60,
    JoinChannel = 63,
    BeatmapInfoRequest = 68,
    MatchChangeHost = 70,
    AddFriend = 73,
    RemoveFriend = 74,
    MatchChangeTeam = 77,
    LeaveChannel = 78,
    ReceiveUpdates = 79,
    SetAwayMessage = 82,
    IrcOnly = 84,
    UserStatsRequest = 85,
    MatchInvite = 87,
    MatchChangePassword = 90,
    TournamentMatchInfoRequest = 93,
    UserPresenceRequest = 97,
    UserPresenceRequestAll = 98,
    ToggleBlockNonFriendDms = 99,
    TournamentJoinMatchChannel = 108,
    TournamentLeaveMatchChannel = 109,

    // Server
    LoginSuccessful = 5,
    ChatMessage = 7,
    Pong = 8,
    UserStats = 11,
    UserLogout = 12,
    SpectatorJoined = 13,
    SpectatorLeft = 14,
    SpectatorFrames = 15,
    FailedSpectating = 22,
    GetAttention = 23,
    Alert = 24,
    MatchUpdate = 26,
    MatchCreated = 27,
    MatchDisposed = 28,
    MatchJoinSuccess = 36,
    MatchJoinFailed = 37,
    FellowSpectatorJoined = 42,
    FellowSpectatorLeft = 43,
    MatchStart = 46,
    MatchScoreUpdate = 48,
    MatchTransferHost = 50,
    MatchAllPlayersLoaded = 53,
    MatchPlayerFailed = 57,
    MatchComplete = 58,
    MatchSkip = 61,
    ChannelJoinSuccess = 64,
    ChannelInfo = 65,
    ChannelKick = 66,
    ChannelAutoJoin = 67,
    Privileges = 71,
    FriendsList = 72,
    ProtocolVersion = 75,
    MainMenuIcon = 76,
    MatchPlayerSkipped = 81,
    UserPresence = 83,
    Restart = 86,
    ChannelInfoEnd = 89,
    MatchPasswordChanged = 91,
    SilenceEnd = 92,
    UserSilenced = 94,
    UserPresenceSingle = 95,
    UserPresenceBundle = 96,
    UserDmBlocked = 100,
    TargetSilenced = 101,
    Restricted = 104,
    MatchAborted = 106,
    SwitchServer = 107,
}

impl BinaryDeserialize for MessageType {
    fn read_from(reader: &mut ByteStream) -> std::io::Result<Self> where Self: Sized {
        Ok(unsafe {std::mem::transmute(u16::read_from(reader)?)})
    }
}